version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: retail_assist_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: retail_assist
      POSTGRES_USER: retail_user
      POSTGRES_PASSWORD: retail_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - retail_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U retail_user -d retail_assist"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application (Development)
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: retail_assist_dev
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://retail_user:retail_password@postgres:5432/retail_assist
      PORT: 3001
      AUTHTOKEN: LeVchReAss
      NODE_ENV: development
    volumes:
      # Mount source code for hot reload
      - ./src:/app/src
      - ./prisma:/app/prisma
      - /app/node_modules
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - retail_network
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm run dev
      "

  # Application (Production)
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: retail_assist_prod
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://retail_user:retail_password@postgres:5432/retail_assist
      PORT: 3001
      AUTHTOKEN: LeVchReAss
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - retail_network
    command: >
      sh -c "
        echo 'Running database migrations...' &&
        npx prisma migrate deploy &&
        echo 'Seeding database...' &&
        npx prisma db seed &&
        echo 'Starting application...' &&
        node dist/server.js
      "
    profiles:
      - production

  # PgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: retail_assist_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@retail.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - retail_network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  retail_network:
    driver: bridge